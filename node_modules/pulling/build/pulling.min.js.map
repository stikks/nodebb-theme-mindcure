{"version":3,"file":"pulling.min.js","sources":["../src/util.ts","../src/pulling.ts","../src/touch.ts","../src/reveal.ts","../src/drawer.ts"],"sourcesContent":["export function assertArg(condition: any, message: string) {\n  if (!condition) {\n    throw TypeError(`Invalid arguments: ${message}`);\n  }\n}\n\nexport function polyfill() {\n  Element.prototype.matches = Element.prototype.matches ||\n    // @ts-ignore: Property does not exist\n    Element.prototype.matchesSelector ||\n    Element.prototype.webkitMatchesSelector ||\n    // @ts-ignore: Property does not exist\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    // @ts-ignore: Property does not exist\n    Element.prototype.oMatchesSelector;\n\n  Object.entries = /* Object.entries || */ ((obj: any) => {\n    return Object.keys(obj).map(key => [key, obj[key]] as [string, any]);\n  });\n\n  Object.values = /* Object.values || */ ((obj: any) => {\n    return Object.keys(obj).map(key => obj[key]);\n  });\n\n  Object.assign = Object.assign || ((first: any, ...objects: any[]) => {\n    for (const obj of objects) {\n      for (const [key, val] of Object.entries(obj)) {\n        first[key] = val;\n      }\n    }\n\n    return first;\n  });\n\n  Array.prototype.includes = function includes(value) {\n    return this.indexOf(value) !== -1;\n  };\n}\n","import { assertArg } from './util';\n\nconst timingFunctions: timingFunctions[] = [\n  'linear', 'ease', 'ease-in', 'ease-out',\n  'ease-in-out', 'step-start', 'step-end',\n];\n\nexport default abstract class Pulling {\n  static modes: {\n    [key: string]: new (options: Options) => Pulling;\n  } = {};\n\n  static create(options: Options) {\n    const mode = options.mode || Object.keys(Pulling.modes)[0] || 'drawer';\n    if (!Pulling.modes[mode]) {\n      const modes = Object.keys(Pulling.modes).map(x => `\"${x}\"`).join(', ');\n      throw TypeError(`${'`mode`'} must be one of ${modes}`);\n    }\n\n    return new Pulling.modes[mode](options);\n  }\n\n  protected menu: HTMLElement;\n  protected panel: HTMLElement;\n  protected side: sides;\n  protected mode: modes;\n  protected margin: number;\n  protected timing: number;\n  protected timingFunction: timingFunctions;\n  protected width: number;\n  protected sensitivity: number;\n  protected slope: number;\n  \n  protected styles: Styles = {\n    base: {\n      menu: {},\n      panel: {},\n    },\n    open: {\n      menu: {},\n      panel: {},\n    },\n    closed: {\n      menu: {},\n      panel: {},\n    },\n  };\n\n  protected constructor(options: Options) {\n    if (!Object.values(Pulling.modes).some(x => this instanceof x)) {\n      throw TypeError(\n        'Calling this constructor is not allowed. ' +\n        'Use `Pulling.create` instead',\n      );\n    }\n\n    const {\n      menu,\n      panel,\n      side,\n      mode,\n      margin,\n      timing,\n      timingFunction,\n      width,\n      sensitivity,\n      slope,\n      touch,\n    } = options;\n\n    this.menu = menu;\n    this.panel = panel;\n    this.side = side || 'left';\n    this.mode = mode || 'drawer';\n    this.margin = margin || 25,\n    this.timing = timing || 200;\n    this.timingFunction = timingFunction || 'ease';\n    this.width = width || 256;\n    this.sensitivity = sensitivity || 0.25;\n    this.slope = slope || 0.5;\n\n    assertArg(\n      this.menu instanceof Element, \n      '`menu` must be of type `Element`',\n    );\n    assertArg(\n      this.panel instanceof Element, \n      '`panel` must be of type `Element`',\n    );\n    assertArg(\n      this.side === 'left' || this.side === 'right', \n      '`side` must be equal to \"left\" or \"right\"',\n    );\n    assertArg(\n      typeof this.margin === 'number',\n      '`margin` must be of type \"number\"',\n    );\n    assertArg(\n      typeof this.timing === 'number',\n      '`timing` must be of type \"number\"',\n    );\n    assertArg(\n      timingFunctions.includes(this.timingFunction),\n      `${'`timingFunction`'} must be one of ${timingFunctions.map(x => `\"${x}\"`).join(', ')}`,\n    );\n    assertArg(\n      typeof this.width === 'number',\n      '`width` must be of type \"number\"',\n    );\n    assertArg(\n      typeof this.sensitivity === 'number',\n      '`sensitivity` must be of type \"number\"',\n    );\n    assertArg(\n      typeof this.slope === 'number',\n      '`slope` must be of type \"number\"',\n    );\n  }\n\n  protected handlers: {\n    beforeclose: Function[],\n    closed: Function[],\n    beforeopen: Function[],\n    opened: Function[],\n    touchstart: Function[],\n    touchmove: Function[],\n    touchend: Function[],\n  } = {\n    beforeclose: [],\n    closed: [],\n    beforeopen: [],\n    opened: [],\n    touchstart: [],\n    touchmove: [],\n    touchend: [],\n  };\n\n  /** Trigger event listeners for the event */\n  protected emit(eventName: eventNames, e?: Event) {\n    this.handlers[eventName].forEach(handler => handler.call(this, e));\n  }\n\n  /** Add an event handler for the event */\n  on(eventName: eventNames, handler: Function) {\n    this.handlers[eventName].push(handler);\n    return this;\n  }\n\n  /** Remove all event handlers for an event */\n  off(eventName: eventNames, handler?: Function) {\n    if (handler) {\n      this.handlers[eventName] = this.handlers[eventName].filter((handle) => {\n        return handle !== handler;\n      });\n    } else {\n      this.handlers[eventName] = [];\n    }\n    return this;\n  }\n\n  state = {\n    opened: false,\n    opening: false,\n    closed: true,\n    closing: false,\n  };\n\n  /** Open the menu */\n  open(e?: Event) {\n    this.emit('beforeopen', e);\n    if (this.disabled) {\n      return this;\n    }\n\n    if (this.state.opened) {\n      return this;\n    }\n\n    this.state.closed = false;\n    this.state.closing = false;\n    this.state.opening = true;\n    this.state.opened = false;\n\n    const offset = this.offset();\n    if (offset > 0) {\n      const duration = `${this.timing * (1 - offset / this.width)}ms`;\n      \n      this.menu.style.transitionDuration = duration;\n      this.panel.style.transitionDuration = duration;\n    }\n\n    Object.assign(this.menu.style, this.styles.open.menu);\n    Object.assign(this.panel.style, this.styles.open.panel);\n\n    const after = () => {\n      this.state.opening = false;\n      this.state.opened = true;\n\n      Object.assign(this.menu.style, this.styles.open.menu);\n      Object.assign(this.panel.style, this.styles.open.panel);\n      \n      this.emit('opened');\n    };\n    if (offset === this.width) {\n      after();\n    } else {\n      this.afterTransitionend(after);\n    }\n\n    return this;\n  }\n\n  /** Close the menu */\n  close(e?: Event) {\n    this.emit('beforeclose', e);\n    if (this.disabled) {\n      return this;\n    }\n\n    if (this.state.closed) {\n      this.state.closing = false;\n      return this;\n    }\n\n    this.state.closed = false;\n    this.state.closing = true;\n    this.state.opening = false;\n    this.state.opened = false;\n\n    const offset = this.offset();\n    if (offset > 0) {\n      const duration = `${this.timing * offset / this.width}ms`;\n      \n      this.menu.style.transitionDuration = duration;\n      this.panel.style.transitionDuration = duration;\n    }\n    \n    Object.assign(this.menu.style, this.styles.closed.menu);\n    Object.assign(this.panel.style, this.styles.closed.panel);\n\n    const after = () => {\n      this.state.closing = false;\n      this.state.closed = true;\n\n      Object.assign(this.menu.style, this.styles.closed.menu);\n      Object.assign(this.panel.style, this.styles.closed.panel);\n      \n      this.emit('closed');\n    };\n    if (offset === 0) {\n      after();\n    } else {\n      this.afterTransitionend(after);\n    }\n\n    return this;\n  }\n  \n  toggle(condition: boolean) {\n    if (condition === true) {\n      this.open();\n    } else if (condition === false) {\n      this.close();\n    } else {\n      this.toggle(this.state.closed || this.state.closing);\n    }\n    return this;\n  }\n\n  protected disabled = false;\n\n  /** Disable the menu functionality */\n  disable() {\n    this.disabled = true;\n    return this;\n  }\n\n  /** Enabled to menu functionality */\n  enable() {\n    this.disabled = false;\n    return this;\n  }\n\n  protected afterTransitionend(callback: Function) {}\n\n  /** get offset from the default (closed) position */\n  protected offset() {\n    return 0;\n  }\n}\n","import Pulling from './pulling';\n\nexport default class TouchPulling extends Pulling {\n  constructor(options: Options) {\n    super(options);\n\n    this.touch = options.touch !== false;\n    this.ignoreScrollables = options.ignoreScrollables !== false;\n    \n    if (this.touch) {\n      this.addTouchEvents();\n    }\n  }\n  protected touch: boolean;\n  protected ignoreScrollables: boolean;\n  \n  protected touched = false;\n  \n  /** set offset */\n  protected applyOffset(offset: number) {}\n\n  protected initTouchEvents() {\n    // tslint:disable-next-line no-this-assignment\n    const { width, margin, side, slope, sensitivity, menu, panel } = this;\n\n    const sign = (side === 'left' ? 1 : -1);\n\n    let startClientX = 0;\n    let startClientY = 0;\n\n    let lastClientX = 0;\n\n    let startOffset = 0;\n\n    let prevTime = 0;\n    let lastTime = 0;\n\n    let prevClientX = 0;\n\n    let firstMove = false;\n\n    const scrollable = (elem: HTMLElement | null): boolean => {\n      if (\n        !elem ||\n        elem === document.documentElement || \n        elem === document.body\n      ) {\n        return false;\n      }\n\n      const { overflowX, overflowY } = getComputedStyle(elem);\n      \n      return overflowX === 'auto' || \n        overflowX === 'scroll' || \n        (overflowX === 'visible' && overflowY !== 'visible') ||\n        scrollable(elem.parentElement);\n    };\n\n    const onTouchstart = (e: TouchEvent) => {\n      const target = e.target as HTMLElement;\n\n      if (this.ignoreSelector && (target).matches(this.ignoreSelector)) {\n        return;\n      }\n\n      // ignore when the element is scrollable\n      if (this.ignoreScrollables && scrollable(target)) {\n        return;\n      }\n\n      this.emit('touchstart', e);\n      if (this.disabled) {\n        return;\n      }\n\n      this.touched = false;\n      if (e.touches.length !== 1) {\n        return;\n      }\n      \n      const { clientX, clientY } = e.touches[0];\n      const offset = this.offset();\n      const region = margin + offset;\n      \n      if (side === 'left' && clientX <= region ||\n        side === 'right' && window.innerWidth - clientX <= region) {\n        this.touched = true;\n\n        startClientX = clientX;\n        startClientY = clientY;\n\n        lastClientX = clientX;\n        \n        startOffset = offset;\n\n        lastTime = Date.now();\n        \n        firstMove = true;\n      }\n    };\n\n    const onTouchmove = (e: TouchEvent) => {\n      this.emit('touchmove', e);\n\n      if (this.disabled || !this.touched) {\n        return;\n      }\n\n      const { clientX, clientY } = e.touches[0];\n      const diffX = (clientX - startClientX) * sign;\n      \n      if (Math.abs(diffX) < 10) {\n        return;\n      }\n      \n      if (firstMove) {\n        const diffY = clientY - startClientY;\n        const currentSlope = Math.abs(diffY / diffX);\n        if (currentSlope > slope) {\n          this.touched = false;\n          return;\n        }\n        \n        if (this.state.closed && diffX > 0) {\n          this.emit('beforeopen');\n        } else if (this.state.opened) {\n          this.emit('beforeopen');\n        }\n\n        menu.style.transition = null;\n        panel.style.transition = null;\n      }\n\n      if (this.state.opened && diffX > 0 || this.state.closed && diffX < 0) {\n        lastClientX = clientX;\n        lastTime = Date.now();\n\n        return;\n      }\n\n      this.state.opened = false;\n      this.state.closed = false;\n\n      const dx = (clientX - lastClientX) * sign;\n      \n      const opening = dx > 0;\n      this.state.opening = opening;\n      this.state.closing = !opening;\n\n      const offset = Math.min(Math.max(0, startOffset + diffX), width);\n      this.applyOffset(offset);\n\n      prevClientX = lastClientX;\n      lastClientX = clientX;\n\n      prevTime = lastTime;\n      lastTime = Date.now();\n      firstMove = false;\n    };\n\n    const onTouchend = (e: TouchEvent) => {\n      if (!this.touched) {\n        return;\n      }\n\n      this.touched = false;\n      if (firstMove) {\n        return;\n      }\n\n      this.emit('touchend', e);\n      \n      Object.assign(this.panel.style, this.styles.base.panel);\n      Object.assign(this.menu.style, this.styles.base.menu);\n\n      const offset = this.offset();\n      const { clientX } = e.changedTouches[0];\n      \n      let x1;\n      let t1;\n\n      if (clientX === lastClientX) {\n        x1 = prevClientX;\n        t1 = prevTime;\n      } else {\n        x1 = lastClientX;\n        t1 = lastTime;\n      }\n\n      const x2 = clientX;\n      const t2 = Date.now();\n\n      const speed = (x2 - x1) / (t2 - t1) * sign;\n\n      if (\n        offset > width / 2 && \n        speed > -sensitivity || \n        speed > sensitivity\n      ) {\n        this.open(e);\n      } else {\n        this.close(e);\n      }\n    };\n\n    return {\n      onTouchstart,\n      onTouchmove,\n      onTouchend,\n    };\n  }\n  protected touchEvents: {\n    onTouchstart(e: TouchEvent): void,\n    onTouchmove(e: TouchEvent): void,\n    onTouchend(e: TouchEvent): void,\n  };\n  protected addTouchEvents() {\n    if (!this.touchEvents) {\n      this.touchEvents = this.initTouchEvents();\n    }\n    document.documentElement.addEventListener('touchstart', this.touchEvents.onTouchstart, false);\n    document.documentElement.addEventListener('touchmove', this.touchEvents.onTouchmove, false);\n    document.documentElement.addEventListener('touchend', this.touchEvents.onTouchend, false);\n  }\n  protected removeTouchEvents() {\n    document.documentElement.removeEventListener('touchstart', this.touchEvents.onTouchstart);\n    document.documentElement.removeEventListener('touchmove', this.touchEvents.onTouchmove);\n    document.documentElement.removeEventListener('touchend', this.touchEvents.onTouchend);\n  }\n\n  protected ignores: string[] = [];\n  protected ignoreSelector: string = '';\n\n  /** Ignore touch events from elements matching a given selector */\n  ignore(selector: string) {\n    this.ignores.push(selector);\n    this.ignoreSelector = this.ignores.join(', ');\n    return this; \n  }\n  /** \n   * Remove selector from ignore list\n   * _Does not_ override `ignore`\n   */\n  unignore(selector: string) {\n    this.ignores = this.ignores.filter(s => s !== selector);\n    this.ignoreSelector = this.ignores.join(', ');\n    return this;\n  }\n\n  /** enable touch functionality */\n  enableTouch() {\n    if (!this.touch) {\n      this.addTouchEvents();\n      this.touch = true;\n    }\n    return this;\n  }\n\n  /** disable touch functionality */\n  disableTouch() {\n    if (this.touch) {\n      this.removeTouchEvents();\n      this.touch = false;\n    }\n    return this;\n  }\n}\n","import TouchPulling from './touch';\n\nexport default class Reveal extends TouchPulling {\n  constructor(options: Options) {\n    super(options);\n\n    this.styles.base.menu = {\n      overflowX: 'hidden',\n      overflowY: 'auto',\n\n      position: 'fixed',\n      [this.side]: '0',\n      top: '0',\n      bottom: '0',\n      width: `${this.width}px`,\n\n      zIndex: '-1',\n    };\n    this.styles.base.panel = {\n      transition: `transform ${this.timing}ms ${this.timingFunction}`,\n    };\n    this.styles.open.panel = {\n      transform: `translateX(${this.side === 'right' ? '-' : ''}${this.width}px)`,\n    };\n    this.styles.closed.panel = {\n      transform: `translateX(0)`,\n    };\n\n    Object.assign(this.menu.style, this.styles.base.menu, this.styles.closed.menu);\n    Object.assign(this.panel.style, this.styles.base.panel, this.styles.closed.panel);\n\n    this.initTransitionend();\n  }\n\n  protected offset() {\n    const panelPos = this.panel.getBoundingClientRect();\n    return Math.abs(panelPos.left);\n  }\n\n  protected applyOffset(offset: number) {\n    const sign = (this.side === 'left' ? 1 : -1);\n    this.panel.style.transform = `translateX(${offset * sign}px)`;\n  }\n\n  private onTransitionend: Function | null;\n\n  protected afterTransitionend(callback: Function) {\n    this.onTransitionend = callback;\n  }\n\n  private initTransitionend() {\n    this.panel.addEventListener('transitionend', () => {\n      if (this.onTransitionend) {\n        this.onTransitionend();\n      }\n\n      this.onTransitionend = null;\n    }, false);\n  }\n}\n\nTouchPulling.modes['reveal'] = Reveal;\n","import TouchPulling from './touch';\n\nexport default class Drawer extends TouchPulling {\n  constructor(options: Options) {\n    super(options);\n\n    this.styles.base.menu = {\n      transition: `transform ${this.timing}ms ${this.timingFunction}`,\n      \n      overflowX: 'hidden',\n      overflowY: 'auto',\n\n      position: 'fixed',\n      [this.side]: `-${this.width}px`,\n      top: '0',\n      bottom: '0',\n      width: `${this.width}px`,\n\n      zIndex: '1',\n    };\n    this.styles.open.menu = {\n      transform: `translateX(${this.side === 'right' ? '-' : ''}${this.width}px)`,\n    };\n    this.styles.closed.menu = {\n      transform: `translateX(0)`,\n    };\n\n    Object.assign(this.menu.style, this.styles.base.menu, this.styles.closed.menu);\n    Object.assign(this.panel.style, this.styles.base.panel, this.styles.closed.panel);\n\n    this.initTransitionend();\n  }\n\n  protected offset() {\n    const menuPos = this.menu.getBoundingClientRect();\n    if (this.side === 'left') {\n      return menuPos.left + this.width;\n    }\n    return window.innerWidth - menuPos.left;\n  }\n\n  protected applyOffset(offset: number) {\n    const sign = (this.side === 'left' ? 1 : -1);\n    this.menu.style.transform = `translateX(${offset * sign}px)`;\n  }\n\n  private onTransitionend: Function | null;\n\n  protected afterTransitionend(callback: Function) {\n    this.onTransitionend = callback;\n  }\n\n  private initTransitionend() {\n    this.menu.addEventListener('transitionend', () => {\n      if (this.onTransitionend) {\n        this.onTransitionend();\n      }\n\n      this.onTransitionend = null;\n    }, false);\n  }\n}\n\nTouchPulling.modes['drawer'] = Drawer;\n"],"names":["condition","message","TypeError","timingFunctions","options","_super","_this","touch","ignoreScrollables","addTouchEvents","__extends","TouchPulling","offset","_a","width","margin","side","slope","sensitivity","menu","panel","sign","startClientX","startClientY","lastClientX","startOffset","prevTime","lastTime","prevClientX","firstMove","scrollable","elem","document","documentElement","body","overflowX","overflowY","parentElement","onTouchstart","e","target","ignoreSelector","matches","emit","disabled","touched","touches","length","clientX","clientY","region","window","innerWidth","Date","now","onTouchmove","diffX","Math","abs","diffY","currentSlope","state","closed","opened","style","transition","opening","closing","min","max","applyOffset","onTouchend","Object","assign","styles","base","x1","t1","speed","open","close","this","touchEvents","initTouchEvents","addEventListener","removeEventListener","selector","ignores","push","join","filter","s","removeTouchEvents","beforeclose","beforeopen","touchstart","touchmove","touchend","values","Pulling","modes","some","x","mode","timing","timingFunction","assertArg","Element","includes","map","keys","eventName","handlers","forEach","handler","call","handle","duration","transitionDuration","after","afterTransitionend","toggle","callback","position","transform","initTransitionend","Reveal","panelPos","getBoundingClientRect","left","onTransitionend","Drawer","menuPos","prototype","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","entries","obj","key","first","_i","objects","objects_1","_c","_b","_d","val","Array","value","indexOf"],"mappings":"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"}